name: Delpoy OAS to Kon

on:
  push:
    branches:
      - main  	  
jobs:
  OAS_To_KONG:
    runs-on: ubuntu-latest 	
    steps:
    - name: Checkout Code
      uses: actions/checkout@v2

    - name: Install Insomnia CLI
      run: |
        wget https://github.com/Kong/insomnia/releases/download/lib%403.12.0/inso-linux-3.12.0.tar.xz
        tar -xf inso-linux-3.12.0.tar.xz

    - name: Lint OpenAPI Spec
      run: ./inso lint spec mock.yaml

    - name: Generate kong.yaml
      run: ./inso generate config mock.yaml --type declarative -o kong.yaml

    - name: open kong.yaml
      run: cat /home/runner/work/kongrepo/kongrepo/kong.yaml

    - name: install deck CLI
      run: |
        curl -sL https://github.com/kong/deck/releases/download/v1.17.2/deck_1.17.2_linux_amd64.tar.gz -o deck.tar.gz
        tar -xf deck.tar.gz -C /tmp 
        sudo cp /tmp/deck /usr/local/bin/

    - name: update
      run: deck convert --from kong-gateway-2.x --to kong-gateway-3.x --input-file kong.yaml --output-file new-kong.yaml

    - name: check    
      run: deck sync -s new-kong.yaml --kong-addr ${{ secrets.KONG_ADMIN_ADDR }}
  publish-customer-api-to-portal:  # Publish the API to the dev portal
    name: Publish OAS to dev portal
    needs: OAS_To_KONG  # Make sure the OAS_To_KONG job is completed before running this job
    runs-on: ubuntu-latest  # Use Ubuntu as the operating system for the job
    steps:
      - name: Checkout branch  # Checkout the branch from the repository
        uses: actions/checkout@v2		
      - name: Install NodeJs  # Install Node.js for running the dev portal CLI
        uses: actions/setup-node@v3		
      - name: Install kon-dev-portal-cli  # Install dev portal CLI
        run: npm install -g kong-portal-cli		
      - name: Deploy to dev portal
        run: |          
          portal deploy --preserve sand	  
        env:
          KONG_ADMIN_URL: http://34.125.240.32:8001
